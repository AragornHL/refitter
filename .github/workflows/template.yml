name: Run Tests

on:
  workflow_call:
    inputs:
      openapi:
        required: true
        type: string
      format:
        required: true
        type: string
      version:
        required: true
        type: string
      os:
        type: string
        default: ubuntu-latest
      command:
        required: true
        type: string

jobs:
  
  test:

    name: ${{ inputs.openapi }}.${{ inputs.format }} (${{ inputs.version }}) ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v2

    - name: Prepare OpenAPI Spec
      id: prepare_openapi_spec
      run: |
        $filename = "./OpenAPI/${{ inputs.version }}/${{ inputs.openapi }}.${{ inputs.format }}"
        $exists = Test-Path -Path $filename -PathType Leaf
        if ($exists -eq $true) {
          Copy-Item $filename ./openapi.${{ inputs.format }}
          "exists=$true" >> $env:GITHUB_OUTPUT
        } else {
          "exists=$false" >> $env:GITHUB_OUTPUT
        }
      working-directory: test
      shell: pwsh

    - name: Generate code
      run: |
        $outputPath = "${{ inputs.openapi }}.cs"
        $outputPath = $outputPath.Substring(0, 1).ToUpperInvariant() + $outputPath.Substring(1, $outputPath.Length - 1)
        $namespace = "${{ inputs.openapi }}".Replace("-", "")
        $namespace = $namespace.Substring(0, 1).ToUpperInvariant() + $namespace.Substring(1, $namespace.Length - 1)
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --namespace $namespace --output $outputPath --no-logging
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --namespace "$namespace.WithCancellation" --output "WithCancellation$outputPath" --cancellation-tokens --no-logging
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --namespace "$namespace.Internal" --output "Internal$outputPath" --internal --no-logging
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --namespace "$namespace.Interface" --output "I$outputPath" --interface-only --no-logging
        ${{ inputs.command }} ./openapi.${{ inputs.format }} --namespace "$namespace.UsingApiResponse" --output "IApi$outputPath" --interface-only --return-api-response --no-logging
        Copy-Item $outputPath ./OpenAPI/${{ inputs.version }}/${{ inputs.openapi }}.${{ inputs.format }}.cs
        Copy-Item $outputPath ./ConsoleApp/Net6/
        Copy-Item $outputPath ./ConsoleApp/Net7/
        Copy-Item $outputPath ./ConsoleApp/Net48/
        Copy-Item $outputPath ./ConsoleApp/Net472/
        Copy-Item $outputPath ./ConsoleApp/Net462/
        Copy-Item $outputPath ./ConsoleApp/Net481/
        Copy-Item $outputPath ./ConsoleApp/NetStandard20/
        Copy-Item $outputPath ./ConsoleApp/NetStandard21/
        Copy-Item "I$outputPath" ./ConsoleApp/Net6/
        Copy-Item "I$outputPath" ./ConsoleApp/Net7/
        Copy-Item "I$outputPath" ./ConsoleApp/Net48/
        Copy-Item "I$outputPath" ./ConsoleApp/Net472/
        Copy-Item "I$outputPath" ./ConsoleApp/Net462/
        Copy-Item "I$outputPath" ./ConsoleApp/Net481/
        Copy-Item "I$outputPath" ./ConsoleApp/NetStandard20/
        Copy-Item "I$outputPath" ./ConsoleApp/NetStandard21/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net6/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net7/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net48/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net472/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net462/
        Copy-Item "IApi$outputPath" ./ConsoleApp/Net481/
        Copy-Item "IApi$outputPath" ./ConsoleApp/NetStandard20/
        Copy-Item "IApi$outputPath" ./ConsoleApp/NetStandard21/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net6/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net7/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net48/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net472/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net462/
        Copy-Item "Internal$outputPath" ./ConsoleApp/Net481/
        Copy-Item "Internal$outputPath" ./ConsoleApp/NetStandard20/
        Copy-Item "Internal$outputPath" ./ConsoleApp/NetStandard21/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net6/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net7/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net48/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net472/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net462/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/Net481/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/NetStandard20/
        Copy-Item "WithCancellation$outputPath" ./ConsoleApp/NetStandard21/
      working-directory: test
      shell: pwsh
      if: steps.prepare_openapi_spec.outputs.exists == 'True'
    
    - name: Publish generated code as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Generated Code (${{ inputs.openapi }}.${{ inputs.format }}, ${{ inputs.version }}, ${{ inputs.os }})
        path: test/*.cs
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET 6 generated code
      run: dotnet build ./ConsoleApp/Net6/Net6.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET 7 generated code
      run: dotnet build ./ConsoleApp/Net7/Net7.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET 4.8.1 generated code
      run: dotnet build ./ConsoleApp/Net481/Net481.csproj
      if: ${{ steps.prepare_openapi_spec.outputs.exists == 'True' && inputs.os == 'windows-2022' }}
      working-directory: test

    - name: Build .NET 4.8 generated code
      run: dotnet build ./ConsoleApp/Net48/Net48.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET 4.7.2 generated code
      run: dotnet build ./ConsoleApp/Net472/Net472.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET 4.6.2 generated code
      run: dotnet build ./ConsoleApp/Net462/Net462.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET Standard 2.0 generated code
      run: dotnet build ./ConsoleApp/NetStandard20/NetStandard20.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Build .NET Standard 2.1 generated code
      run: dotnet build ./ConsoleApp/NetStandard21/NetStandard21.csproj
      working-directory: test
      if: steps.prepare_openapi_spec.outputs.exists == 'True'

    - name: Prepare Minimal API project
      run: cp Petstore.cs ./MinimalApi/
      working-directory: test
      if: ${{ steps.prepare_openapi_spec.outputs.exists == 'True' && inputs.openapi == 'petstore' }}

    - name: Build Minimal API generated code
      run: dotnet build ./MinimalApi/MinimalApi.csproj
      working-directory: test
      if: ${{ steps.prepare_openapi_spec.outputs.exists == 'True' && inputs.openapi == 'petstore' }}